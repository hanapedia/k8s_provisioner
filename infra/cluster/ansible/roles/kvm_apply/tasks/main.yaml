# vim: set filetype=yaml.ansible :
---
- name: Ensure that terraform directory for the cluster exists
  ansible.builtin.file:
    path: "../terraform/kvm-{{ configurable.k8s.cluster_name }}"
    state: directory
    mode: '1777'

- name: Copy terraform files to directory
  ansible.builtin.copy:
    src: "./files/terraform/"
    dest: "../terraform/kvm-{{ configurable.k8s.cluster_name }}/"
    mode: '1777'

- name: Initialize terraform
  ansible.builtin.command:
    cmd: terraform init
    chdir: "../terraform/kvm-{{ configurable.k8s.cluster_name }}"
  changed_when: true

- name: show config before create
  ansible.builtin.debug:
    msg: |
      "num_control_plane: {{ configurable.k8s.control_plane.vms }}
      disk_size_cp: {{ configurable.k8s.control_plane.disk }}
      memory_cp: {{ configurable.k8s.control_plane.mem }}
      cpu_cp: {{ configurable.k8s.control_plane.cpu }}
      num_node: {{ configurable.k8s.node.vms }}
      disk_size_n: {{ configurable.k8s.node.disk }}
      memory_n: {{ configurable.k8s.node.mem }}
      cpu_n: {{ configurable.k8s.node.cpu }}"

- name: wait for comfirmation
  ansible.builtin.pause:

- name: Apply terraform configuration
  community.general.terraform:
    project_path: "../terraform/kvm-{{ configurable.k8s.cluster_name }}"
    state: present
    variables:
      libvirt_uri: "{{ libvirt.uri }}"
      domain: "{{ configurable.libvirt.network.domain }}"
      cluster_name: "{{ configurable.k8s.cluster_name }}"
      versioned_namespace: "{{ configurable.libvirt.namespace }}-{{ configurable.libvirt.version }}"
      ubuntu_22_img_url: "{{ libvirt.ubuntu_base_img_url }}"
      ssh_keys: "{{ ssh_keys | to_json }}"
      num_control_plane: "{{ configurable.k8s.control_plane.vms }}"
      disk_size_cp: "{{ configurable.k8s.control_plane.disk }}"
      memory_cp: "{{ configurable.k8s.control_plane.mem }}"
      cpu_cp: "{{ configurable.k8s.control_plane.cpu }}"
      num_node: "{{ configurable.k8s.node.vms }}"
      disk_size_n: "{{ configurable.k8s.node.disk }}"
      memory_n: "{{ configurable.k8s.node.mem }}"
      cpu_n: "{{ configurable.k8s.node.cpu }}"
      disk_size_lb: "{{ configurable.k8s.loadbalancer.disk }}"
      memory_lb: "{{ configurable.k8s.loadbalancer.mem }}"
      cpu_lb: "{{ configurable.k8s.loadbalancer.cpu }}"
  register: output
